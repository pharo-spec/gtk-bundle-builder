name: CI

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    tags: [ '*' ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-osx:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-13
            arch: x86_64
          - os: macos-latest
            arch: arm64

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set VM name
        run: echo "VM_DIR=pharo-vm-Darwin-${{ matrix.arch }}-gtk-stable" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install brew
        run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

      - name: Install GTK4
        run: brew install gtk4 gtksourceview5 libadwaita

      - uses: demarey/pharo-setup-gha@main
        with:
          version: 13
          vmUrl: https://files.pharo.org/vm/pharo-spur64-headless/Darwin-${{ matrix.arch }}/latest10.zip

      - name: Run Pharo
        run: |
          $PHARO --headless Pharo.image eval "Metacello new repository: 'gitlocal://./src'; baseline: 'BundleBuilder'; load. (Smalltalk globals at: #MacBundleBuilder) makeGTK4Bundle${{ matrix.arch == 'arm64' && 'ARM' || '' }}"
          
          ls -R
          cp -R pharo-vm $VM_DIR
          cp gtk4/* $VM_DIR/Pharo.app/Contents/MacOS/Plugins/
          codesign --remove-signature $VM_DIR/Pharo.app
          codesign --force --deep --sign - $VM_DIR/Pharo.app

      - name: Archive VM
        uses: actions/upload-artifact@v4
        with:
          name: pharo-vm-Darwin-${{ matrix.arch }}-gtk-stable
          path: pharo-vm-Darwin-${{ matrix.arch }}-gtk-stable/*.app

  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    env:
      VM_NAME: pharo-vm-Windows-x86_64-gtk-stable
      
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: CLANG64
          update: true

      - name: Install GTK4
        shell: msys2 {0}
        run: |
          pacman --noconfirm -S mingw-w64-clang-x86_64-gtk4 mingw-w64-clang-x86_64-libadwaita mingw-w64-clang-x86_64-gtksourceview5
          MSYS2_PATH=$(cygpath -m /)
          echo "MSYS2 is installed at: $MSYS2_PATH"
          echo "MSYS2_PATH=$MSYS2_PATH" >> $GITHUB_ENV
          ls -R "$MSYS2_PATH"

      - uses: demarey/pharo-setup-gha@main
        with:
          version: 13
          useBashOnWindows: true
          vmUrl: https://files.pharo.org/vm/pharo-spur64-headless/Windows-x86_64/latest10.zip
  
      - name: Run Pharo
        run: |
          $PHARO --headless Pharo.image eval "Metacello new repository: 'gitlocal://./src'; baseline: 'BundleBuilder'; load. (Smalltalk globals at: #WindowsBundleBuilder) makeGTK4BundleFromDir: '$MSYS2_PATH\clang64'"
          cp -R pharo-vm $VM_NAME
          ls -R
          cp -f gtk4/* $VM_NAME/
          ls -R
        shell: bash
  
      - name: Archive VM
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.VM_NAME }}
          path: ${{ env.VM_NAME }}

  release:
    name: Create GitHub Release
    needs: [build-osx, build-windows]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        